[{"/home/shivam/hot_sf_basic/src/index.js":"1","/home/shivam/hot_sf_basic/src/App.js":"2","/home/shivam/hot_sf_basic/src/reportWebVitals.js":"3","/home/shivam/hot_sf_basic/src/Components/NavbarComp.js":"4","/home/shivam/hot_sf_basic/src/Components/ShowQuestion.js":"5","/home/shivam/hot_sf_basic/src/Context/DataContext.js":"6"},{"size":547,"mtime":1607454918925,"results":"7","hashOfConfig":"8"},{"size":377,"mtime":1607496447232,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607454409799,"results":"10","hashOfConfig":"8"},{"size":1005,"mtime":1607671841811,"results":"11","hashOfConfig":"8"},{"size":6614,"mtime":1607670363478,"results":"12","hashOfConfig":"8"},{"size":749,"mtime":1607668990396,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1i9dxpy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/home/shivam/hot_sf_basic/src/index.js",[],["29","30"],"/home/shivam/hot_sf_basic/src/App.js",[],"/home/shivam/hot_sf_basic/src/reportWebVitals.js",[],"/home/shivam/hot_sf_basic/src/Components/NavbarComp.js",["31","32","33","34","35"],"/home/shivam/hot_sf_basic/src/Components/ShowQuestion.js",["36","37","38","39","40","41","42","43","44","45"],"import React, { useContext,useState } from 'react';\nimport { Container, Row,Col, Card, Button, Modal } from 'react-bootstrap';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { DataContext } from '../Context/DataContext';\nimport '../App.css';\nimport { BiUpArrowAlt } from \"react-icons/bi\";\n\n\nconst ShowQuestion = () =>{\n    const {data,setData,page,setPage} = useContext(DataContext)\n    const [show, setShow] = useState(false);\n    const [scrollTop, setscrollTop] = useState(0);\n    const color1 = {\n        width:'70px',\n        border:'8px solid pink'\n    }\n    const color2 = {\n        width:'70px',\n        border:'8px solid blue'\n    }\n    const color3 = {\n        width:'70px', \n        border:'8px solid red'\n    }\n    \n    const [pop,setPop] = useState({\n        \"tags\": [\n        \"javascript\",\n        \"loops\",\n        \"object\"\n        ],\n        \"owner\": {\n        \"reputation\": 87,\n        \"user_id\": 9676402,\n        \"user_type\": \"registered\",\n        \"profile_image\": \"https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128\",\n        \"display_name\": \"Cody Smith\",\n        \"link\": \"https://stackoverflow.com/users/9676402/cody-smith\"\n        },\n        \"is_answered\": true,\n        \"view_count\": 20,\n        \"accepted_answer_id\": 65213724,\n        \"answer_count\": 3,\n        \"score\": 0,\n        \"last_activity_date\": 1607505608,\n        \"creation_date\": 1607504442,\n        \"question_id\": 65213578,\n        \"content_license\": \"CC BY-SA 4.0\",\n        \"link\": \"https://stackoverflow.com/questions/65213578/push-comma-separated-string-to-new-property-in-object\",\n        \"title\": \"Push comma separated string to new property in object\"\n        });\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () =>{\n        setShow(true);\n    } \n  \n    return(\n        <>\n            <Container>\n                <Row>\n                    <Col lg=\"12\">\n                                        {data?<>\n                                            <InfiniteScroll\n          dataLength={data.length}\n          next={()=>{console.log(\"hellow orld\")\n          let p = page+1;\n            setPage(p)\n        }}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n        >   \n                        {data.map((data,key)=>{\n                            return (\n                                <>\n                                <Card onClick={() =>{\n                                    handleShow()\n                                    setPop(data)\n                                }}>\n                        <Card.Body>\n                            <Row>\n                                <Col lg=\"4\" style={{textAlign:'center'}}>\n                                    {data.owner.reputation<=100?<>\n                                        {data.owner.reputation<50?<>\n                                <img src={data.owner.profile_image} style={color1}/><br/><br/>\n                                        \n                                        </>:<>\n                                <img src={data.owner.profile_image} style={color2}/><br/><br/>\n                                        \n                                        </>}\n                                        \n                                    </>:<>\n                                <img src={data.owner.profile_image} style={color3}/><br/><br/>\n                                    </>}\n                                <h5>{data.owner.display_name}</h5>\n                                </Col>\n                                <Col lg=\"8\">\n                                <h5>{data.title}</h5>\n                                {data.tags.map((tag)=>{\n                                    return (\n                                        <>\n                                            <h5 style={{display:'inline', fontSize:'15px'}} className=\"tags\">{tag}</h5>\n                                        </>\n                                    )\n                                })}\n                                <BiUpArrowAlt/>{data.score}\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                        </Card>\n                        <br/>\n                        </>\n                            )\n                        })}\n                        </InfiniteScroll>\n                        </>:<>Loading..</>}\n                    </Col>\n                </Row>\n            </Container>\n            <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n                    <Modal.Title>{pop.title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <Row>\n                                <Col lg=\"4\" style={{textAlign:'center'}}>\n                                {pop.owner.reputation<=100?<>\n                                        {pop.owner.reputation<50?<>\n                                <img src={pop.owner.profile_image} style={color1}/><br/><br/>\n                                        \n                                        </>:<>\n                                <img src={pop.owner.profile_image} style={color2}/><br/><br/>\n                                        \n                                        </>}\n                                        \n                                    </>:<>\n                                <img src={pop.owner.profile_image} style={color3}/><br/><br/>\n                                    </>}\n                                <h5>{pop.owner.display_name}</h5>\n                                </Col>\n                                <Col lg=\"8\">\n                    <h5> Views:  {pop.view_count} Asked at:  10:12</h5>\n                                    {pop.is_answered?<>Answered</>:<>Not Answered</>}<br/>\n                                {pop.tags.map((tag)=>{\n                                    return (\n                                        <>\n                                            <h5 style={{display:'inline', fontSize:'15px'}} className=\"tags\">{tag}</h5>\n                                        </>\n                                    )\n                                })}\n                                <BiUpArrowAlt/>{pop.score}\n                                </Col>\n                            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"warning\">\n                <a href={pop.link} target=\"_blank\"> View on Stackoverflow</a>\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        </>\n    )\n}\nexport default ShowQuestion;\n\n","/home/shivam/hot_sf_basic/src/Context/DataContext.js",["46"],"import React,{createContext,useState,useEffect} from 'react';\n\nexport const DataContext = createContext()\n\nconst DataContextProvider = (props) => {\n    const [data,setData] = useState([])\n    const [page,setPage] = useState(1)\n    useEffect(()=>{\n        const fun = async() => {\n            fetch('https://api.stackexchange.com/2.2/questions?order=desc&sort=hot&site=stackoverflow&page='+page)\n            .then(response => response.json())\n            .then(datas => setData([...data,...datas.items]));\n        }\n        fun()\n    },[page])\n\n    return ( \n        <DataContext.Provider value={{data,setData:setData,page,setPage:setPage}}>\n           {props.children}\n        </DataContext.Provider>\n     );\n}\n \nexport default DataContextProvider;\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":20,"nodeType":"53","messageId":"54","endLine":2,"endColumn":26},{"ruleId":"51","severity":1,"message":"55","line":2,"column":27,"nodeType":"53","messageId":"54","endLine":2,"endColumn":31},{"ruleId":"51","severity":1,"message":"56","line":2,"column":32,"nodeType":"53","messageId":"54","endLine":2,"endColumn":43},{"ruleId":"51","severity":1,"message":"57","line":7,"column":10,"nodeType":"53","messageId":"54","endLine":7,"endColumn":15},{"ruleId":"58","severity":1,"message":"59","line":9,"column":24,"nodeType":"53","endLine":9,"endColumn":35},{"ruleId":"51","severity":1,"message":"60","line":10,"column":17,"nodeType":"53","messageId":"54","endLine":10,"endColumn":24},{"ruleId":"51","severity":1,"message":"61","line":12,"column":12,"nodeType":"53","messageId":"54","endLine":12,"endColumn":21},{"ruleId":"51","severity":1,"message":"62","line":12,"column":23,"nodeType":"53","messageId":"54","endLine":12,"endColumn":35},{"ruleId":"63","severity":1,"message":"64","line":85,"column":33,"nodeType":"65","endLine":85,"endColumn":85},{"ruleId":"63","severity":1,"message":"64","line":88,"column":33,"nodeType":"65","endLine":88,"endColumn":85},{"ruleId":"63","severity":1,"message":"64","line":93,"column":33,"nodeType":"65","endLine":93,"endColumn":85},{"ruleId":"63","severity":1,"message":"64","line":129,"column":33,"nodeType":"65","endLine":129,"endColumn":84},{"ruleId":"63","severity":1,"message":"64","line":132,"column":33,"nodeType":"65","endLine":132,"endColumn":84},{"ruleId":"63","severity":1,"message":"64","line":137,"column":33,"nodeType":"65","endLine":137,"endColumn":84},{"ruleId":"66","severity":1,"message":"67","line":157,"column":36,"nodeType":"68","endLine":157,"endColumn":51},{"ruleId":"58","severity":1,"message":"69","line":15,"column":7,"nodeType":"70","endLine":15,"endColumn":13,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'value' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","'setData' is assigned a value but never used.","'scrollTop' is assigned a value but never used.","'setscrollTop' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [data, page]",{"range":"77","text":"78"},[535,541],"[data, page]"]