{"version":3,"sources":["Components/NavbarComp.js","Context/DataContext.js","Components/ShowQuestion.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarFun","useState","setValue","dbValue","savetoDB","debounceSave","useCallback","debounce","nextValue","Navbar","bg","variant","Brand","href","Nav","className","Link","type","placeholder","onChange","event","target","value","style","color","DataContext","createContext","DataContextProvider","props","data","setData","page","setPage","useEffect","a","fetch","then","response","json","datas","items","fun","Provider","children","ShowQuestion","useContext","show","setShow","color1","width","border","color2","color3","pop","setPop","Container","Row","Col","lg","dataLength","length","next","console","log","hasMore","loader","map","key","Card","onClick","Body","textAlign","owner","reputation","src","profile_image","display_name","title","tags","tag","display","fontSize","score","Modal","onHide","Header","closeButton","Title","view_count","is_answered","Footer","Button","link","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.970eec62.chunk.js","sourcesContent":["import React, { useState,useCallback } from 'react';\nimport {Navbar,Nav,Button,Form,FormControl} from 'react-bootstrap';\nimport {debounce} from \"lodash\";\n\nconst NavbarFun = () =>{\n\n  const [value,setValue] = useState(\"\");\n  const [dbValue,savetoDB] = useState(\"\");\n  const debounceSave = useCallback(\n    debounce((nextValue)=> savetoDB(nextValue),1000),[]\n  )\n  const handleChange = (event) =>{\n    const nextValue = event.target.value;\n    setValue(nextValue);\n    debounceSave(nextValue);\n  }\n    return(\n        <>\n         <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"#home\">Hot Stackoverflow Questions</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#home\"></Nav.Link>\n      <Nav.Link href=\"#features\"></Nav.Link>\n      <Nav.Link href=\"#pricing\"></Nav.Link>\n    </Nav>\n      <input type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={handleChange}/>\n     <h5 style={{color:'white'}}> {dbValue}</h5>\n  </Navbar>\n        </>\n    )\n}\nexport default NavbarFun;","import React,{createContext,useState,useEffect} from 'react';\n\nexport const DataContext = createContext()\n\nconst DataContextProvider = (props) => {\n    const [data,setData] = useState([])\n    const [page,setPage] = useState(1)\n    useEffect(()=>{\n        const fun = async() => {\n            fetch('https://api.stackexchange.com/2.2/questions?order=desc&sort=hot&site=stackoverflow&page='+page)\n            .then(response => response.json())\n            .then(datas => setData([...data,...datas.items]));\n        }\n        fun()\n    },[page])\n\n    return ( \n        <DataContext.Provider value={{data,setData:setData,page,setPage:setPage}}>\n           {props.children}\n        </DataContext.Provider>\n     );\n}\n \nexport default DataContextProvider;\n","import React, { useContext,useState } from 'react';\nimport { Container, Row,Col, Card, Button, Modal } from 'react-bootstrap';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { DataContext } from '../Context/DataContext';\nimport '../App.css';\nimport { BiUpArrowAlt } from \"react-icons/bi\";\n\n\nconst ShowQuestion = () =>{\n    const {data,setData,page,setPage} = useContext(DataContext)\n    const [show, setShow] = useState(false);\n    const [scrollTop, setscrollTop] = useState(0);\n    const color1 = {\n        width:'70px',\n        border:'8px solid pink'\n    }\n    const color2 = {\n        width:'70px',\n        border:'8px solid blue'\n    }\n    const color3 = {\n        width:'70px', \n        border:'8px solid red'\n    }\n    \n    const [pop,setPop] = useState({\n        \"tags\": [\n        \"javascript\",\n        \"loops\",\n        \"object\"\n        ],\n        \"owner\": {\n        \"reputation\": 87,\n        \"user_id\": 9676402,\n        \"user_type\": \"registered\",\n        \"profile_image\": \"https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128\",\n        \"display_name\": \"Cody Smith\",\n        \"link\": \"https://stackoverflow.com/users/9676402/cody-smith\"\n        },\n        \"is_answered\": true,\n        \"view_count\": 20,\n        \"accepted_answer_id\": 65213724,\n        \"answer_count\": 3,\n        \"score\": 0,\n        \"last_activity_date\": 1607505608,\n        \"creation_date\": 1607504442,\n        \"question_id\": 65213578,\n        \"content_license\": \"CC BY-SA 4.0\",\n        \"link\": \"https://stackoverflow.com/questions/65213578/push-comma-separated-string-to-new-property-in-object\",\n        \"title\": \"Push comma separated string to new property in object\"\n        });\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () =>{\n        setShow(true);\n    } \n  \n    return(\n        <>\n            <Container>\n                <Row>\n                    <Col lg=\"12\">\n                                        {data?<>\n                                            <InfiniteScroll\n          dataLength={data.length}\n          next={()=>{console.log(\"hellow orld\")\n          let p = page+1;\n            setPage(p)\n        }}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n        >   \n                        {data.map((data,key)=>{\n                            return (\n                                <>\n                                <Card onClick={() =>{\n                                    handleShow()\n                                    setPop(data)\n                                }}>\n                        <Card.Body>\n                            <Row>\n                                <Col lg=\"4\" style={{textAlign:'center'}}>\n                                    {data.owner.reputation<=100?<>\n                                        {data.owner.reputation<50?<>\n                                <img src={data.owner.profile_image} style={color1}/><br/><br/>\n                                        \n                                        </>:<>\n                                <img src={data.owner.profile_image} style={color2}/><br/><br/>\n                                        \n                                        </>}\n                                        \n                                    </>:<>\n                                <img src={data.owner.profile_image} style={color3}/><br/><br/>\n                                    </>}\n                                <h5>{data.owner.display_name}</h5>\n                                </Col>\n                                <Col lg=\"8\">\n                                <h5>{data.title}</h5><br/><br/><br/>\n                                {data.tags.map((tag)=>{\n                                    return (\n                                        <>\n                                            <h5 style={{display:'inline', fontSize:'15px'}} className=\"tags\">{tag}</h5>\n                                        </>\n                                    )\n                                })}\n                                <BiUpArrowAlt/>{data.score}\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                        </Card>\n                        <br/>\n                        </>\n                            )\n                        })}\n                        </InfiniteScroll>\n                        </>:<>Loading..</>}\n                    </Col>\n                </Row>\n            </Container>\n            <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n                    <Modal.Title>{pop.title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <Row>\n                                <Col lg=\"4\" style={{textAlign:'center'}}>\n                                {pop.owner.reputation<=100?<>\n                                        {pop.owner.reputation<50?<>\n                                <img src={pop.owner.profile_image} style={color1}/><br/><br/>\n                                        \n                                        </>:<>\n                                <img src={pop.owner.profile_image} style={color2}/><br/><br/>\n                                        \n                                        </>}\n                                        \n                                    </>:<>\n                                <img src={pop.owner.profile_image} style={color3}/><br/><br/>\n                                    </>}\n                                <h5>{pop.owner.display_name}</h5>\n                                </Col>\n                                <Col lg=\"8\">\n                    <h5> Views:  {pop.view_count} Asked at:  10:12</h5>\n                                    {pop.is_answered?<>Answered</>:<>Not Answered</>}<br/><br/><br/><br/>\n                                {pop.tags.map((tag)=>{\n                                    return (\n                                        <>\n                                            <h5 style={{display:'inline', fontSize:'15px'}} className=\"tags\">{tag}</h5>\n                                        </>\n                                    )\n                                })}\n                                <BiUpArrowAlt/>{pop.score}\n                                </Col>\n                            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"warning\">\n                <a href={pop.link} target=\"_blank\"> View on Stackoverflow</a>\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        </>\n    )\n}\nexport default ShowQuestion;\n\n","import NavbarFun from './Components/NavbarComp'\nimport './App.css';\nimport ShowQuestion from './Components/ShowQuestion';\nimport DataContextProvider from './Context/DataContext';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DataContextProvider>\n      <NavbarFun/><br/>\n      <ShowQuestion/>\n      </DataContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}